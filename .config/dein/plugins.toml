[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-eunuch'

[[plugins]]
repo     = 'tpope/vim-fugitive'
hook_add = '''
  nnoremap <Space>gd :<C-u>Gdiff<Enter>
  nnoremap <Space>gs :<C-u>Gstatus<Enter>
  nnoremap <Space>gl :<C-u>Glog<Enter>
  nnoremap <Space>ga :<C-u>Gwrite<Enter>
  nnoremap <Space>gc :<C-u>Gcommit<Enter>
  nnoremap <Space>gC :<C-u>Git commit --amend<Enter>
  nnoremap <Space>gb :<C-u>Gblame<Enter>
'''

[[plugins]]
repo = 'idanarye/vim-merginal'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'vim-scripts/Align'

[[plugins]]
repo     = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_guide_size = 1
'''

[[plugins]]
repo     = 'Shougo/denite.nvim'
hook_add = '''
  call denite#custom#var('grep', 'command', ['ag'])

  nnoremap <silent> <C-p> :<C-u>Denite file_rec<CR>
  noremap <C-Z> :Denite file_old<CR>

  call denite#custom#source('file_rec', 'matchers', ['matcher_fuzzy', 'matcher_ignore_globs'])
  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
    \ [ '*~', '*.o', '*.exe', '*.bak',
    \ '.DS_Store', '*.pyc', '*.sw[po]', '*.class',
    \ '.hg/', '.git/', '.bzr/', '.svn/',
    \ 'target/', 'node_modules/', 'bower_components/', 'tmp/', 'log/', 'vendor/ruby',
    \ '.idea/', 'dist/',
    \ '.sass-cache/',
    \ 'vender',
    \ 'target',
    \ 'tags', 'tags-*'])


  call denite#custom#map('insert', '<C-j>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-k>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map('insert', '<C-v>', '<denite:do_action:vsplit>', 'noremap')
  call denite#custom#map('insert', '<C-x>', '<denite:do_action:split>', 'noremap')
  call denite#custom#map('insert', '<C-t>', '<denite:do_action:tabswitch>', 'noremap')
'''

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo  = 'thinca/vim-quickrun'

[[plugins]]
repo = 'tpope/vim-abolish'

[[plugins]]
repo     = 'vim-scripts/open-browser.vim'
hook_add = '''
  let g:netrw_nogx = 1 " disable netrw's gx mapping.
  nmap gx <Plug>(openbrowser-smart-search)
  vmap gx <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo     = 'Lokaltog/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  let g:clever_f_ignore_case = 1
  nmap s <Plug>(easymotion-s2)
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  map /  <Plug>(incsearch-forward)
  map ?  <Plug>(incsearch-backward)
  map g/ <Plug>(incsearch-stay)
  map z/ <Plug>(incsearch-fuzzy-/)
  map z? <Plug>(incsearch-fuzzy-?)
  map zg/ <Plug>(incsearch-fuzzy-stay)
'''

[[plugins]]
repo  = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo     = 'dyng/ctrlsf.vim'
hook_add = '''
  let g:ctrlsf_auto_close = 1
  let g:ctrlsf_mapping = {
    \ "split": "S",
    \ "tab": "T",
    \ }
'''

[[plugins]]
repo = 'rking/ag.vim'
build = 'brew install the_silver_searcher'

[[plugins]]
repo = 'Shougo/vimfiler'
depents = ['Shougo/unite.vim']
on_cmd = ['VimFilerTab', 'VimFiler', 'VimFilerExplorer']
on_map = ['<Plug>(vimfiler_switch)']

hook_add = '''
nnoremap <Leader>e :VimFilerExplorer<CR>
autocmd MyAutoCmd BufEnter * if (winnr('$') == 1 && &filetype ==# 'vimfiler') | q | endif
  let g:vimfiler_safe_mode_by_default = 0
  let g:vimfiler_enable_auto_cd = 1
  " .から始まるファイルおよび.pycで終わるファイルを不可視パターンに
  let g:vimfiler_ignore_pattern = "\%(^\..*\|\.pyc$\)"
  let g:vimfiler_as_default_explorer = 1
  autocmd MyAutoCmd FileType vimfiler call s:vimfiler_settings()
  function! s:vimfiler_settings()
    " ^^ to go up
    nmap <buffer> ^^ <Plug>(vimfiler_switch_to_parent_directory)
    " use R to refresh
    nmap <buffer> R <Plug>(vimfiler_redraw_screen)
    " overwrite C-l
    nmap <buffer> <C-l> <C-w>l
  endfunction
'''

